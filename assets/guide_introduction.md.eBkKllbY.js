import{Z as e,A as n,c as l,j as r}from"./chunks/app.Dbi3JLp4.js";import{_ as h,C as o,c as p,o as d,ag as t,G as k}from"./chunks/framework.Bw-5EFTY.js";e("my-counter",()=>{const s=n(0);return r`
    <div class="container">
      <h1>Count: ${s}</h1>
      <button onclick=${()=>s(s()+1)}>+</button>
      <button onclick=${()=>s(s()-1)}>-</button>

      <style>
        ${l}
      </style>
    </div>
  `});const f=JSON.parse('{"title":"Introduction","description":"","frontmatter":{},"headers":[],"relativePath":"guide/introduction.md","filePath":"guide/introduction.md"}'),c={name:"guide/introduction.md"};function g(s,i,u,E,m,F){const a=o("my-counter");return d(),p("div",null,[i[0]||(i[0]=t(`<h1 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h1><h2 id="what-is-esor" tabindex="-1">What is Esor? <a class="header-anchor" href="#what-is-esor" aria-label="Permalink to &quot;What is Esor?&quot;">​</a></h2><p>Esor is a modern, minimalistic web framework based on Web Components, designed to create high-performance, interactive user interfaces. It combines the power of native web standards with an elegant responsive system, offering a smooth and productive development experience.</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { component, html, signal } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;esor&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello-world&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> html</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`&lt;h1&gt;¡Hola, mundo!&lt;/h1&gt;\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// or so you just need to return html with interpolation</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello-world&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> html</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`&lt;h1&gt;¡Hola, \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}!&lt;/h1&gt;\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Esor is in version: <code>beta</code>, use it wisely, it is not yet ready for production.</p></div><h2 id="why-esor" tabindex="-1">Why Esor? <a class="header-anchor" href="#why-esor" aria-label="Permalink to &quot;Why Esor?&quot;">​</a></h2><h3 id="🚀-exceptional-performance" tabindex="-1">🚀 Exceptional Performance <a class="header-anchor" href="#🚀-exceptional-performance" aria-label="Permalink to &quot;🚀 Exceptional Performance&quot;">​</a></h3><p>Esor uses native Web Components and a fine-grained reactivity system, resulting in fast and efficient applications with minimal bundle size.</p><h3 id="💡-intuitive-and-familiar" tabindex="-1">💡 Intuitive and Familiar <a class="header-anchor" href="#💡-intuitive-and-familiar" aria-label="Permalink to &quot;💡 Intuitive and Familiar&quot;">​</a></h3><p>If you know HTML, CSS and JavaScript, you&#39;ll feel right at home. Esor takes familiar patterns and enhances them with modern features:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { component, html, signal, effect } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;esor&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;live-counter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> signal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> html</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &lt;div class=&quot;counter&quot;&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &lt;p&gt;Contador: &lt;strong&gt;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">count</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&lt;/strong&gt;&lt;/p&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &lt;button onclick=\${</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> count</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">count</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&gt;+&lt;/button&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &lt;button onclick=\${</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> count</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">count</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&gt;-&lt;/button&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &lt;/div&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  \`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>The component is shown below:</p>`,12)),k(a),i[1]||(i[1]=t('<h3 id="🔧-flexible-and-extensible" tabindex="-1">🔧 Flexible and Extensible. <a class="header-anchor" href="#🔧-flexible-and-extensible" aria-label="Permalink to &quot;🔧 Flexible and Extensible.&quot;">​</a></h3><ul><li>Uses modern web tools and standards</li><li>Integrates seamlessly with other libraries</li><li>Works with your favorite development tools</li></ul><h3 id="📦-everything-you-need-nothing-more" tabindex="-1">📦 Everything You Need, Nothing More <a class="header-anchor" href="#📦-everything-you-need-nothing-more" aria-label="Permalink to &quot;📦 Everything You Need, Nothing More&quot;">​</a></h3><ul><li>Standards-based component system</li><li>Granular responsiveness with signals</li><li>Powerful and efficient template system</li><li>Intuitive hooks for state and effect management</li><li>Zero dependencies</li></ul><h2 id="main-features" tabindex="-1">Main features <a class="header-anchor" href="#main-features" aria-label="Permalink to &quot;Main features&quot;">​</a></h2><h3 id="🔌-native-web-components" tabindex="-1">🔌 Native Web Components <a class="header-anchor" href="#🔌-native-web-components" aria-label="Permalink to &quot;🔌 Native Web Components&quot;">​</a></h3><p>Reusable components based on web standards.</p><h3 id="⚡-granular-reactivity" tabindex="-1">⚡ Granular Reactivity <a class="header-anchor" href="#⚡-granular-reactivity" aria-label="Permalink to &quot;⚡ Granular Reactivity&quot;">​</a></h3><p>System signals for accurate and efficient updates.</p><h3 id="📝-expressive-templates" tabindex="-1">📝 Expressive Templates <a class="header-anchor" href="#📝-expressive-templates" aria-label="Permalink to &quot;📝 Expressive Templates&quot;">​</a></h3><p>Powerful declarative syntax for defining interfaces.</p><h3 id="🎯-developer-experience" tabindex="-1">🎯 Developer Experience <a class="header-anchor" href="#🎯-developer-experience" aria-label="Permalink to &quot;🎯 Developer Experience&quot;">​</a></h3><p>Intuitive APIs and modern development tools.</p><h2 id="comparison-with-other-frameworks" tabindex="-1">Comparison with Other Frameworks <a class="header-anchor" href="#comparison-with-other-frameworks" aria-label="Permalink to &quot;Comparison with Other Frameworks&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Feature</th><th>Esor</th><th>Lit</th><th>React</th></tr></thead><tbody><tr><td><strong>Base</strong></td><td>Web Components</td><td>Web Components</td><td>Virtual DOM</td></tr><tr><td><strong>Reactivity</strong></td><td>Signals ⚡</td><td>Properties</td><td>Hooks</td></tr><tr><td><strong>Performance</strong></td><td>⭐⭐⭐⭐⭐</td><td>⭐⭐⭐⭐</td><td>⭐⭐⭐</td></tr><tr><td><strong>Bundle Size</strong></td><td>~3KB</td><td>~5KB</td><td>~40KB</td></tr><tr><td><strong>Learning Curve</strong></td><td>Download</td><td>Media</td><td>Media</td></tr><tr><td><strong>Build Step</strong></td><td>❌ Optional</td><td>❌ Optional</td><td>✅ Required</td></tr><tr><td><strong>Bundler Needed</strong></td><td>❌ No</td><td>❌ No</td><td>✅ Webpack/Vite</td></tr><tr><td><strong>Ecosystem</strong></td><td>En crecimiento</td><td>Maduro</td><td>Muy grande</td></tr></tbody></table><h2 id="who-is-esor-for" tabindex="-1">Who is Esor for? <a class="header-anchor" href="#who-is-esor-for" aria-label="Permalink to &quot;Who is Esor for?&quot;">​</a></h2><p>Esor is ideal for:</p><ul><li>🎯 Developers who value simplicity and performance.</li><li>🔧 Projects that need reusable web components.</li><li>🚀 Applications that require high performance</li><li>📚 Teams that prefer modern web standards</li></ul><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><ul><li><a href="./introduction/getting-started.html">Quick Start Guide</a></li><li><a href="./examples.html">Examples</a></li></ul><div class="tip custom-block"><p class="custom-block-title">ADVICE</p><p>Esor is designed to be adopted gradually. You can start with a single component in your existing application and grow from there.</p></div><div class="warning custom-block"><p class="custom-block-title">NOTE</p><p>Esor requires modern browsers that support Web Components. See the <a href="https://caniuse.com/?search=web%20components" target="_blank" rel="noreferrer">compatibility table</a> for more details.</p></div>',22))])}const v=h(c,[["render",g]]);export{f as __pageData,v as default};
